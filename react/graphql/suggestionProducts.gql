fragment Product on Product @context(provider: "vtex.search") {
  cacheId
  productId
  description
  productName
  productReference
  linkText
  brand
  brandId
  link
  categories
  priceRange {
    sellingPrice {
      highPrice
      lowPrice
    }
    listPrice {
      highPrice
      lowPrice
    }
  }
  specificationGroups {
    name
    specifications {
      name
      values
    }
  }
  items {
    itemId
    name
    nameComplete
    complementName
    ean
    variations {
      name
      values
    }
    referenceId {
      Key
      Value
    }
    measurementUnit
    unitMultiplier
    images {
      cacheId
      imageId
      imageLabel
      imageTag
      imageUrl
      imageText
    }
    sellers {
      sellerId
      sellerName
      commertialOffer {
        discountHighlights {
          name
        }
        teasers {
          name
          conditions {
            minimumQuantity
            parameters {
              name
              value
            }
          }
          effects {
            parameters {
              name
              value
            }
          }
        }
        Installments {
          Value
          InterestRate
          TotalValuePlusInterestRate
          NumberOfInstallments
          Name
        }
        Price
        ListPrice
        PriceWithoutDiscount
        RewardValue
        PriceValidUntil
        AvailableQuantity
      }
    }
  }
  productClusters {
    id
    name
  }
  properties {
    name
    values
  }
}

query suggestionProducts(
  $term: String!
  $attributeKey: String
  $attributeValue: String
  $productOrigin: Origin
  $indexingType: IndexingType
) {
  suggestionProducts(
    term: $term
    attributeKey: $attributeKey
    attributeValue: $attributeValue
    indexingType: $indexingType
  ) @context(provider: "vtex.search") {
    count
    operator
    misspelled
    products(origin: $productOrigin, indexingType: $indexingType) {
      ...Product
    }
  }
}
